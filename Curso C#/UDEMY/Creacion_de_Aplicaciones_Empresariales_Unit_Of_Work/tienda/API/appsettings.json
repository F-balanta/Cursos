{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "JWT": {
    "key": "rgfZs3pNboV0hbG6Fat",
    "Issuer": "TiendaApi",
    "Audience": "TiendaApiUser",
    "DurationInMinutes": 30
  },
  "Serilog": {
    //Using: Definimos a donde queremos que seguarde la información Serilog.Skins.File - Indicamos que será uin archivo
    "Using": [ "Serilog.Sinks.File" ],
    // El nivel minimo será de Information - Se mostraran los mensaje "Info", "Error", "Warning", "Fatal"
    "MinimumLevel": {
      // Si lo establecemos en Debug - Esto ocaciona que se guarde demasiada información
      // Se recomienda en producción en vez de Information se deje  "Warning" para que solamente las advertencias y los mensajes de error sean mostrados
      "Default": "Information"
    },
    "WriteTo": [ // A donde vamos a escribir esa informacion??
      {
        "Name": "File", // A un archivo :v
        "Args": {
          "path": "../logs/webapi-.log", // Nombre del archivo y ruta
          "rollingInterval": "Day", // Los tiempos en la cual se va a crear el archivo
          "outputTemplate": "[{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} {Level:u3}] {Message:lj}{NewLine}{Exception}"
          // Timestamp  es la marca de tiempo  se va a mostrar por año, mes, dia ,Hora, minutos y Segundos
          // Level: Es el nivel del log formateado a nombre completo, si se requiere un nombre mas corto se puede Usar :U3 Para mostrarlo en mayusculas o :w3 para mostrarlo en minusculas
          // Message: Es el mensaje del evento log en el texto plano el especificador de formato :l cambia la manera de formatear las cadenas y :j renderiza en estilo Json
          // NewLine: Es una propiedad con el valor de System.Enviroment.NewLine... osea NewLine :v
          // Excepcion: Es el mensaje de excepcion en caso de haber uno.

          // ES NECESARIO HACER TODA ESTA CONFIGURACIÓN PARA QUE SERILOG PUEDA FUNCIONAR CORRECTAMENTE.
        }
      }
    ]
  }
}
